basePath: /api/v1
definitions:
  httperror.ErrorResponse:
    properties:
      error_code:
        type: string
      error_message:
        type: string
    type: object
  models.AbilityScoreBonuses:
    properties:
      charisma:
        type: integer
      constitution:
        type: integer
      dexterity:
        type: integer
      intelligence:
        type: integer
      strength:
        type: integer
      wisdom:
        type: integer
    type: object
  models.Age:
    properties:
      average_lifespan:
        type: string
      maximum_age:
        type: integer
      minimum_age:
        type: integer
      race_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
    type: object
  models.Language:
    properties:
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
      name:
        type: string
    type: object
  models.Proficiency:
    properties:
      description:
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
      name:
        type: string
    type: object
  models.Race:
    properties:
      ability_score_bonuses:
        $ref: '#/definitions/models.AbilityScoreBonuses'
      age:
        $ref: '#/definitions/models.Age'
      alignment:
        type: string
      description:
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
      languages_known:
        items:
          $ref: '#/definitions/models.Language'
        type: array
      name:
        type: string
      proficiencies:
        items:
          $ref: '#/definitions/models.Proficiency'
        type: array
      size:
        type: string
      speed:
        type: integer
      subraces:
        items:
          $ref: '#/definitions/models.Subrace'
        type: array
      traits:
        items:
          $ref: '#/definitions/models.Trait'
        type: array
    type: object
  models.Subrace:
    properties:
      ability_score_bonuses:
        $ref: '#/definitions/models.AbilityScoreBonuses'
      description:
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
      name:
        type: string
      race_id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
    type: object
  models.Trait:
    properties:
      description:
        type: string
      id:
        example: 123e4567-e89b-12d3-a456-426614174000
        format: uuid
        type: string
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: dev.casagrande@gmail.com
    name: Lucas Casagrande
    url: http://github.com/Casagrande-Lucas
  description: API D&D 5e card game.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: D&D 5e API
  version: "1.0"
paths:
  /races:
    get:
      consumes:
      - application/json
      description: Return all registered races
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Race'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: List all races
      tags:
      - Races
    post:
      consumes:
      - application/json
      description: Create a new race
      parameters:
      - description: Race info
        in: body
        name: race
        required: true
        schema:
          $ref: '#/definitions/models.Race'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Race'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Create race
      tags:
      - Races
  /races/{id}:
    delete:
      description: Delete an existing race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Delete race
      tags:
      - Races
    get:
      consumes:
      - application/json
      description: Retrieve a race using the provided ID
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Race'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Get race by ID
      tags:
      - Races
    put:
      consumes:
      - application/json
      description: Update an existing race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Race info
        in: body
        name: race
        required: true
        schema:
          $ref: '#/definitions/models.Race'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Race'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Update race
      tags:
      - Races
  /races/{id}/subraces:
    post:
      consumes:
      - application/json
      description: Add a new subrace to an existing race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Subrace info
        in: body
        name: subrace
        required: true
        schema:
          $ref: '#/definitions/models.Subrace'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Subrace'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Add subrace
      tags:
      - Races
  /races/{id}/subraces/{subraceID}:
    delete:
      consumes:
      - application/json
      description: Remove an existing subrace from a race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Subrace ID (UUID)
        in: path
        name: subraceID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Remove subrace
      tags:
      - Races
  /races/{id}/traits/{traitID}:
    delete:
      consumes:
      - application/json
      description: Remove an existing trait from a race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Trait ID (UUID)
        in: path
        name: traitID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Remove trait from race
      tags:
      - Races
    post:
      consumes:
      - application/json
      description: Add a new trait to an existing race
      parameters:
      - description: Race ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Trait ID (UUID)
        in: path
        name: traitID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Add trait to race
      tags:
      - Races
  /races/search:
    get:
      consumes:
      - application/json
      description: Search for races based on query parameters
      parameters:
      - description: Key to filter
        in: query
        name: key
        type: string
      - description: Value to filter
        in: query
        name: value
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Race'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httperror.ErrorResponse'
      summary: Search races
      tags:
      - Races
swagger: "2.0"
