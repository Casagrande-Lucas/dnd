// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Lucas Casagrande",
            "url": "http://github.com/Casagrande-Lucas",
            "email": "dev.casagrande@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/races": {
            "get": {
                "description": "Return all registered races",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "List all races",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Race"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Create race",
                "parameters": [
                    {
                        "description": "Race info",
                        "name": "race",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Race"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Race"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/races/search": {
            "get": {
                "description": "Search for races based on query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Search races",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to filter",
                        "name": "key",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Value to filter",
                        "name": "value",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Race"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/races/{id}": {
            "get": {
                "description": "Retrieve a race using the provided ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Get race by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Race"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Update race",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Race info",
                        "name": "race",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Race"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Race"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing race",
                "tags": [
                    "Races"
                ],
                "summary": "Delete race",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/races/{id}/subraces": {
            "post": {
                "description": "Add a new subrace to an existing race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Add subrace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Subrace info",
                        "name": "subrace",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subrace"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Subrace"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/races/{id}/subraces/{subraceID}": {
            "delete": {
                "description": "Remove an existing subrace from a race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Remove subrace",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Subrace ID (UUID)",
                        "name": "subraceID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/races/{id}/traits/{traitID}": {
            "post": {
                "description": "Add a new trait to an existing race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Add trait to race",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trait ID (UUID)",
                        "name": "traitID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an existing trait from a race",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Races"
                ],
                "summary": "Remove trait from race",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Race ID (UUID)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Trait ID (UUID)",
                        "name": "traitID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httperror.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "httperror.ErrorResponse": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                }
            }
        },
        "models.AbilityScoreBonuses": {
            "type": "object",
            "properties": {
                "charisma": {
                    "type": "integer"
                },
                "constitution": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "wisdom": {
                    "type": "integer"
                }
            }
        },
        "models.Age": {
            "type": "object",
            "properties": {
                "average_lifespan": {
                    "type": "string"
                },
                "maximum_age": {
                    "type": "integer"
                },
                "minimum_age": {
                    "type": "integer"
                },
                "race_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "models.Language": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Proficiency": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.Race": {
            "type": "object",
            "properties": {
                "ability_score_bonuses": {
                    "$ref": "#/definitions/models.AbilityScoreBonuses"
                },
                "age": {
                    "$ref": "#/definitions/models.Age"
                },
                "alignment": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "languages_known": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Language"
                    }
                },
                "name": {
                    "type": "string"
                },
                "proficiencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Proficiency"
                    }
                },
                "size": {
                    "type": "string"
                },
                "speed": {
                    "type": "integer"
                },
                "subraces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Subrace"
                    }
                },
                "traits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Trait"
                    }
                }
            }
        },
        "models.Subrace": {
            "type": "object",
            "properties": {
                "ability_score_bonuses": {
                    "$ref": "#/definitions/models.AbilityScoreBonuses"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string"
                },
                "race_id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                }
            }
        },
        "models.Trait": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "D&D 5e API",
	Description:      "API D&D 5e card game.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
